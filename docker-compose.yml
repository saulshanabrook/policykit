services:
  web:
    build: ./policykit/
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file: ".env"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbit:5672/
      - DATABASE_URL=postgres://user:password@postgres:5432/policykit
      - DJANGO_SECRET_KEY=supersecretkey
      - SERVER_URL=https://${DOMAIN}
      - ALLOWED_HOSTS=web,.localhost,127.0.0.1,[::1],${DOMAIN}
      - DJANGO_DEBUG_TOOLBAR=True
      - DJANGO_VITE_DEV_MODE=${DJANGO_VITE_DEV_MODE:-True}
      - DJANGO_SILK=True
    depends_on:
      - rabbit
      - postgres
      - frontend

  # when DJANGO_VITE_DEV_MODE is True, we need to run the vite server
  # enables HMR while developing the frontend
  frontend:
    build: ./frontend/
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"


  ngrok:
    image: ngrok/ngrok:latest
    depends_on:
      - web
    command:
      - "http"
      - "http://host.docker.internal:8000"
      - "--domain=${DOMAIN}"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}

  celery:
    build: ./policykit/
    user: django-user
    command: "celery -A policykit worker --loglevel=info"
    volumes:
      - .:/app
    env_file: ".env"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbit:5672/
      - DATABASE_URL=postgres://user:password@postgres:5432/policykit
    depends_on:
      - rabbit
      - postgres

  celerybeat:
    build: ./policykit/
    user: django-user
    command: "celery -A policykit beat --loglevel=info"
    env_file: ".env"
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbit:5672/
      - DATABASE_URL=postgres://user:password@postgres:5432/policykit
    depends_on:
      - rabbit
      - postgres

  rabbit:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672

  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=policykit
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
volumes:
  postgres-data:
